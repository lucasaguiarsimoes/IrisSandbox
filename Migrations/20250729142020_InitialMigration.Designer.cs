// <auto-generated />
using System;
using Matrix.LAS.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IrisSandbox.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20250729142020_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            IrisModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IrisSandbox.Models.Amostra", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    IrisPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID"));

                    b.Property<string>("Identificacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pedido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("decimal(12, 7)");

                    b.HasKey("ID");

                    b.HasIndex("Identificacao")
                        .IsUnique();

                    b.ToTable("Amostra", (string)null);
                });

            modelBuilder.Entity("IrisSandbox.Models.AmostraExame", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    IrisPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID"));

                    b.Property<long?>("AmostraID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataHoraProducao")
                        .HasColumnType("datetime");

                    b.Property<long?>("ExameID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ID");

                    b.HasAlternateKey("AmostraID", "ExameID");

                    b.HasIndex("AmostraID");

                    b.HasIndex("DataHoraProducao");

                    b.HasIndex("ExameID");

                    b.ToTable("AmostraExame", (string)null);
                });

            modelBuilder.Entity("IrisSandbox.Models.ConfiguradorGeral", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    IrisPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID"));

                    b.Property<int>("Item")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool?>("ValorBoolean")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ValorBytes")
                        .HasColumnType("varbinary(3641144)");

                    b.Property<DateTime?>("ValorDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ValorDecimal")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ValorLong")
                        .HasColumnType("bigint");

                    b.Property<string>("ValorString")
                        .HasMaxLength(2066)
                        .HasColumnType("nvarchar(2066)");

                    b.HasKey("ID");

                    b.HasIndex("Item")
                        .IsUnique();

                    b.ToTable("ConfiguradorGeral", (string)null);
                });

            modelBuilder.Entity("IrisSandbox.Models.Exame", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    IrisPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(3641144)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(3641144)");

                    b.Property<bool>("ExibeTeste")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeTeste")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(3641144)");

                    b.HasKey("ID");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("IrisSandbox.Models.AmostraExame", b =>
                {
                    b.HasOne("IrisSandbox.Models.Amostra", "Amostra")
                        .WithMany("Exames")
                        .HasForeignKey("AmostraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IrisSandbox.Models.Exame", "Exame")
                        .WithMany("Amostras")
                        .HasForeignKey("ExameID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Amostra");

                    b.Navigation("Exame");
                });

            modelBuilder.Entity("IrisSandbox.Models.Amostra", b =>
                {
                    b.Navigation("Exames");
                });

            modelBuilder.Entity("IrisSandbox.Models.Exame", b =>
                {
                    b.Navigation("Amostras");
                });
#pragma warning restore 612, 618
        }
    }
}
